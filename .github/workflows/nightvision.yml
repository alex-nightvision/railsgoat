name: Test Case - Ruby on Rails App

on:
  push:
  workflow_dispatch:

env:
  # APP=railsgoat-local
  # URL=http://localhost:3000
  # nightvision app create -n railsgoat-local
  # nightvision target create -n railsgoat-local -u http://127.0.0.1:3000/ # --type api
  # # must create a login at http://127.0.0.1:3000/signup?
  # nightvision auth playwright create -u http://localhost:3000 -n railsgoat-local
  NIGHTVISION_TOKEN: ${{ secrets.NIGHTVISION_TOKEN }}
  NIGHTVISION_TARGET: railsgoat-local
  NIGHTVISION_APP: railsgoat-local
  NIGHTVISION_AUTH: railsgoat-local
  
jobs:
  test:
    permissions:
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - name: (1) Clone Code
        uses: actions/checkout@v3
      
      - name: (2) Install NightVision
        run: |
            wget -c https://downloads.nightvision.net/binaries/latest/nightvision_latest_linux_amd64.tar.gz -O - | tar -xz; sudo mv nightvision /usr/local/bin/
                    python -m pip install semgrep --user

      # - name: (3) Extract API documentation from code
      #   run: |
      #     nightvision swagger extract ./ -t ${NIGHTVISION_TARGET} --lang ruby || true
      #     if [ ! -e openapi-spec.yml ]; then
      #         cp backup-openapi-spec.yml openapi-spec.yml
      #     fi

      - name: (4) Start the app
        run: |
          docker-compose build
          docker-compose run web rake db:setup
          docker-compose up -d; sleep 10

      - name: (5) Scan the API
        run: |
          nightvision scan -t ${NIGHTVISION_TARGET} -a ${NIGHTVISION_APP} --auth ${NIGHTVISION_AUTH} > scan-results.txt
          # nightvision export sarif -s "$(head -n 1 scan-results.txt)" --swagger-file openapi-spec.yml

      # - name: (6) Upload SARIF file to GitHub Security Alerts if vulnerabilities are found
      #   uses: github/codeql-action/upload-sarif@v2
      #   if: success()
      #   with:
      #     sarif_file: results.sarif